...Usuario ingresa comando

Obtener comando del usuario.
Realizar parsing y obtener lista de strings.
Analizar primer palabra de la lista (comando) y verificar que coincide con alguna de las funciones definidas.
Si el comando es válido y corresponde a 'crear'
    Validar parámetros (cantidad)
    Si los parámetros son válidos 
        Obtener primer parametro y validar ID de la ecuación (alfabetico, no repetido)
        Si el ID es válido
            Obtener resto de parametros y validar coeficientes (numérico entero, primero != 0)
            Si todos los coeficientes son válidos
                Determinar tipo de ecuación y obtener discriminante
                Crear ecuación.

                //GUARDAR ECUACION EN ABB
                Obtener primer nodo del ABB
                Si el nodo es nulo guardar ecuación en el mismo, sino determinar hacia que lado se debe guardar
                Guardar ecuación en el sub-arbol determinado
                //GUARDAR ECUACION EN ABB

                Desplegar "Resultado: [ID]: [Ecuación]"
            Sino
                Desplegar error para coeficientes inválidos.
        Sino
            Desplegar error para ID repetido
    Sino
        Desplegar error para parámetros inválidos

Solicitar siguiente comando...
        
+++++++++++++++++++++ CABEZALES +++++++++++++++++++++

--strDinamico
void strcrear (strings &s);
void scan(strings &s);
void validarAlfabetico(strings &s);

--listaStrDinamico
listaStrDinamico parsing(strings s);
int cantidadParametros(strings s);

-- arbolEcuacion
void validarIdNoRepetido(arbolEcuacion a, strings &s);
void insertarEcuacion (arbolEcuacion &a, ecuacion e);

-- ecuacion
void crearEcuacion(listaStrDinamico comando, ecuacion &e);
boolean validarNumeroEntero(int nro);
boolean validarNumeroDistintoDeCero(int nro);



--Validar parámetros (cantidad) como lo hacemos?